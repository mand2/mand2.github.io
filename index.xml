<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GoRaNee&#39;s dev-log</title>
    <link>/</link>
    <description>Recent content on GoRaNee&#39;s dev-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 29 Aug 2020 20:25:41 +0900</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>getter setter 설정</title>
      <link>/python/1/</link>
      <pubDate>Tue, 04 Feb 2020 17:57:03 +0900</pubDate>
      
      <guid>/python/1/</guid>
      <description>Python : getter setter 설정 클래스 내부에서 getter setter 설정 쉽게하기 메서드 낭비하지 않고 쉽게 쓸 수 있다! 불러오는 방법이나 셋하는 방법도 java와 조금 다름. 주의할 것..
# test.py class Test: def __init__(self, limit=None, persistent=None): if limit is None: self.__limit = False else : self.__limit = limit if persistent is None: self.__persistent = False else : self.__persistent = persistent @property def limit(self): return self.__limit @property def persistent(self): return self.__persistent @limit.setter def limit(self, limit): self.</description>
    </item>
    
    <item>
      <title>spring.jpa.open-in-view 로그 오류 해결하기</title>
      <link>/spring/spring-boot/1/</link>
      <pubDate>Fri, 27 Sep 2019 09:02:15 +0900</pubDate>
      
      <guid>/spring/spring-boot/1/</guid>
      <description>1. 문제상황 : 왜 로그에 warn이 뜨지? 스프링 부트 app을 시작하면 로그가 나오는데,
잘 보면 아래와 같이 warning 메세지가 뜬다
aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning2. 문제 이유 Spring Boot에서는 spring.jpa.open-in-view를 true로 설정하고 있는데, 이는 OSIV 측면에서 매우 부적절하다고 함. 즉 성능이나 scalability,, 즉 확장성 측면에서 볼 때 false로 해야 하는데 true로 하고 있어 warning 경고 사인이 뜨는 거라고.</description>
    </item>
    
    <item>
      <title>package-lock.json 이란?</title>
      <link>/node.js/1/</link>
      <pubDate>Wed, 11 Sep 2019 21:37:04 +0900</pubDate>
      
      <guid>/node.js/1/</guid>
      <description>package-lock.json 파일이란? 프로젝트에 설치된 노드 모듈들의 의존성 트리를 기록하고 있음.
package-lock.json이 유용한 이유? git 저장소에 node.js 프로젝트를 커밋할 때 보통 node_modules 폴더는 부피가 커서 commit에 포함시키지 않습니다.이 때 package-lock.json 파일은 꼭 함께 커밋을 해주어야 합니다. 다른 팀원이 이 프로젝트를 처음 pull 받아서 npm install 을 했을 때 개발 당시의 동일한 버전의 모듈들이 설치됨을 보장하기 위함입니다. express 모듈을 프로젝트에 설치하게 되면 package.json 파일에 &amp;quot;express&amp;quot;: &amp;quot;~4.16.1&amp;quot; 처럼 Tilde Ranges 표기법으로 버전이 명시됩니다. 4.</description>
    </item>
    
    <item>
      <title>single-page 회원관리 폼 만들기</title>
      <link>/spring/user_register/1/</link>
      <pubDate>Mon, 19 Aug 2019 10:35:28 +0900</pubDate>
      
      <guid>/spring/user_register/1/</guid>
      <description>single page : CRUD(가입+수정+삭제+리스트 보여주기)를 Single page 처리 REST API 이용   개발순서 (MVC 2 패턴으로 함)
 DAO설정
Controller
Service
View
 참고사항
 REST API 연습용입니다.
기존에 사용하던 코드를 재활용하였으므로, 변수명의 차이가 있을 수 있습니다. 회원정보 수정에서의 parametertype 문제
Map으로 설정해야 하나,
빠르게 제작하기 위하여 model(DTO)인 EditMember를 parameter로 설정함. 회원가입시 not null 조건인 ID, PW, NAME만 기입하도록 하였습니다.  결과화면
회원가입화면
회원수정화면
 DAO 설정 //인터페이스 작성 public interface MemberDao { public Member selectById(String id) ; //회원한명의 정보가져오기(login + update ) 	public int deleteMember(int idx) ; //삭제 	/* Rest Api를 위한 메서드 */ public List&amp;lt;Member&amp;gt; selectAllList(); public int insertMem(Member member); public int updateMem(Member member); //업데이트 수정 } &amp;lt;!</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>/about/portfolio/</link>
      <pubDate>Mon, 24 Aug 2020 23:34:04 +0900</pubDate>
      
      <guid>/about/portfolio/</guid>
      <description>portfolio created in Oct, 2019.</description>
    </item>
    
    <item>
      <title>윈도우에서 Ubuntu로 pycharm 설치할 수 있을까</title>
      <link>/python/2/</link>
      <pubDate>Thu, 06 Feb 2020 23:21:03 +0900</pubDate>
      
      <guid>/python/2/</guid>
      <description>PyCharm 설치 ? 어쩌다보니(?)는 아니고, 자발적으로 파이썬 관련 업무를 맡게 되었다. 나아아-름 서버개발자라 윈도우 컴퓨터를 쓴다고 할지라도 리눅스 환경 + 가상환경으로 파이썬 개발을 하고자 했다. 오늘은 그 대서사시의 첫시작(&amp;hellip;)을 써보려고 한다.
1. Ubuntu 18.04 1-1 설치방법(INSTALL)   windows - app 에서 설치
  프로그램 설정 : 리눅스 허용 체크
  Ubuntu 에서 user &amp;amp;&amp;amp; pw 설정
  Ubuntu distro 세팅
sudo apt update &amp;amp;&amp;amp; sudo apt upgrade   1-2 결과 WSL로 pycharm 세팅하려 했지만, snap 을 지원하지 않는다고 하여 실패.</description>
    </item>
    
    <item>
      <title>querydsl 설정하기</title>
      <link>/spring/spring-boot/2/</link>
      <pubDate>Fri, 27 Sep 2019 13:32:21 +0900</pubDate>
      
      <guid>/spring/spring-boot/2/</guid>
      <description>1. QueryDSL 을 선택한 이유? 스프링 부트 + JPA 를 선택하면서 고민했던 사항이 테이블 연결이었다.
JPQL로 간단하게 쿼리문을 불러오는 것이 아닌, 내가 원하는 쿼리문을 사용하기 어렵다는 문제점 때문이었다.
많은 블로그에서 탐색한 결과, QueryDsl을 선택하였다. 비교적 직관적이며, join 중에서도 left outer join / right outer join 등 다양한 조인과 동적쿼리문 작성이 가장 좋아보였다. 사실은 criteriaBuilder를 사용할까 했는데 QueryDsl이 더 직관적이라 선택하였다. 조금 더 보기 편하달까.. 생각보다 많은 레퍼런스와 doc(문서)가 있고, 심지어 한글로 문서번역이 되어있어 편했다.</description>
    </item>
    
    <item>
      <title>formidable 설치 오류 해결하기</title>
      <link>/node.js/2/</link>
      <pubDate>Thu, 26 Sep 2019 21:55:23 +0900</pubDate>
      
      <guid>/node.js/2/</guid>
      <description>위와 같이 npm에 formidable을 설정하려고 하니 package.json이 없다고 뜸
package.json은 해당 프로젝트 의존모듈 관리를 도와주기 때문에 설치해야 한다.정리:: npm 이란? node package manager : 모듈관리매니저
1. 해당 프로젝트 디렉토리로 들어감 cd D:\node\nodeJS_test2. npm init 을 써준다 npm init -y위의 이미지를 보면, package.json내부에 해당 프로젝트의 이름, 버전, 사용되는 모듈 등의 스펙을 볼 수 있다. 이 package.json을 통해 모듈 의존성 모듈 관리도 진행할 수 있다. 만약 어떤 오픈 소스를 다운 받을 때 이 package.</description>
    </item>
    
    <item>
      <title>Spring handler 인터셉터</title>
      <link>/spring/user_register/2/</link>
      <pubDate>Tue, 20 Aug 2019 23:00:47 +0900</pubDate>
      
      <guid>/spring/user_register/2/</guid>
      <description>필터와 인터셉터의 실행시기 차이? 실행시점은 차이가 있음
인터셉터 중 핸들러인터셉터는 필터의 일종이긴 하나, 요청컨트롤러가 있고 확인이 된 후에 실행(컨트롤러 요청 전후) 됨
핸들러 인터셉터 핸들러 인터셉터는 DispatcherServlet 이 컨트롤러를 호출하기 전과 후에 요청과 응답을 참조하거나 가공할 수 있는 일종의 필터
필터와 인터셉터의 자세한 차이를 알고싶다면 여기로
HandlerInterceptor 어떻게 쓸까? HandlerInterceptorAdaptor 클래스를 상속받은 뒤, 자신이 원하는 메서드만 오버라이딩하면 된다.
~&#39;Adaptor&#39;가 붙어있는 클래스인터페이스 구현체이나, 안에 내용이 없음. 내가 구현하고자 하는 메서드만 재구성하면 됨.</description>
    </item>
    
    <item>
      <title>maven 빌드 오류</title>
      <link>/spring/spring-boot/3/</link>
      <pubDate>Mon, 21 Oct 2019 17:56:23 +0900</pubDate>
      
      <guid>/spring/spring-boot/3/</guid>
      <description>😱 왜 Spring Boot 배포가 되지 않는걸까? 프로젝트 팀 작업을 하면서 spring boot 배포를 하는 친구들이 build 오류가 난다고 했다. 처음엔 git에서 파일을 pull 할 때 제대로 못한게 아닐까 싶었는데, 그런 오류는 아니었다.
해당 배포하는 깃에 들어가 파일을 보니, 다음과 같은 구조로 되어있었다.
자세히보면 src/main/java/com/ycar 내부에 ~Application.java 라는 파일이 두개가 있다. 즉, @SpringBootApplication 어노테이션이 붙은 클래스가 두개이며, 어플리케이션 주입 처리가 잘못되어있다는 것을 알 수 있다.
심지어 pom.xml 에서 @SpringBootApplication이 시작하는 루트도 잘못되어 있음을 알 수 있다</description>
    </item>
    
    <item>
      <title>aws EC2로 node.js 배포하기</title>
      <link>/node.js/3/</link>
      <pubDate>Tue, 15 Oct 2019 09:43:26 +0900</pubDate>
      
      <guid>/node.js/3/</guid>
      <description>1. node.js로 서버 배포하기 마지막 프로젝트를 하며 간단한 채팅을 node.js로 만들었다. 간단하게 구현하는 건 어찌어찌 했는데,, 문제는 배포하는 것. 주변에 구현하면서 고생한 친구가 있어서 편하게 했다.
[STEP 1] 인스턴스 생성부터 - putty 설정까지  aws ec2 인스턴스 생성
프리티어만으로 체크한 후
Amazon Linux AMI 2018.03.0 (HVM), SSD Volume Type 를 선택했다
자동으로 선택되어 있는 t2.micro 로 했으며,
관리하기 쉽게 보안그룹 이름을 내가 원하는 이름으로 변경함. pem 키 발급 (인증키임.. 재발급 불가라 잃어버리면 새로 인스턴스 생성해야함 ㅠ)</description>
    </item>
    
    <item>
      <title>Spring 웹상에서 메일 보내보기</title>
      <link>/spring/user_register/3/</link>
      <pubDate>Wed, 21 Aug 2019 02:02:51 +0900</pubDate>
      
      <guid>/spring/user_register/3/</guid>
      <description>웹상에서 메일 보내보기 목차  설정
-1 pom.xml
-2 servlet-context
-3 Controller
-4 왜 MailSender 사용가능할까?
-5 보낸사람이 다를 때? Java Mail API로 메일 작성하기
-1 Java Mail API 란?
-2 HTML 형식으로 보내기
-3 파일 첨부하기  설정부터 해보자! 1. pom.xml에서 메일 설정 &amp;lt;!-- 메일 설정 시작 --&amp;gt; &amp;lt;!-- javax.mail/mail --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;javax.mail&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mail&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-context-support&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${org.springframework-version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2. servlet-context 설정 &amp;lt;beans:bean id=&amp;#34;mailSender&amp;#34; class=&amp;#34;org.springframework.mail.javamail.JavaMailSenderImpl&amp;#34;&amp;gt; &amp;lt;beans:property name=&amp;#34;host&amp;#34; value=&amp;#34;smtp.</description>
    </item>
    
    <item>
      <title>회원가입 시 이메일 인증처리</title>
      <link>/spring/user_register/4/</link>
      <pubDate>Tue, 25 Aug 2020 23:00:53 +0900</pubDate>
      
      <guid>/spring/user_register/4/</guid>
      <description>회원 가입 시 email을 받고인증 코드를 생성, 해당 email 계정으로 인증 처리 메일을 보내보자!관리자가 보낸 인증코드가 맞다면 인증 완료처리까지-먼저 mySQL에서 컬럼 추가해준다. -- 인증코드와 verify 확인 코드 ALTER TABLE `project_01`.`memberinfo` ADD COLUMN `code` VARCHAR(25) NULL AFTER `REGDATE`, ADD COLUMN `verify` CHAR(1) NULL DEFAULT &amp;#39;N&amp;#39; AFTER `code`, ADD COLUMN `email` VARCHAR(45) NULL AFTER `verify`; DAO 변경 DAO 변경
//verify public int updateVerify(String id, String code); public int updateEmail(Member member); Mapper.</description>
    </item>
    
    <item>
      <title>@SpringBootApplication</title>
      <link>/spring/spring-boot/4/</link>
      <pubDate>Mon, 21 Oct 2019 18:28:29 +0900</pubDate>
      
      <guid>/spring/spring-boot/4/</guid>
      <description>@SpringBootApplication 이란? 잠시 돌아가서, 이 @SpringBootApplication이 뭐기에 빌드 오류를 뱉어내는지 보자
1. @SpringBootApplication의 의미는 @Configuration + @EnableAutoConfiguration + @ComponentScan 을 합친 것이다.
-1 @Configuration 이란?  현재 클래스가 Spring의 설정 파일임을 알려주는 어노테이션 == Spring이 Java config로 간주한다! Configuration을 클래스에 적용하고 @Bean을 해당 클래스의 메소드에 적용하면
@Autowired로 빈을 부를 수 있다. 개발자가 생성한 class를 Bean으로 생성 할 때 Single Tone으로 한번만 생성하고
@Component는 Bean을 생성 할 때 java에서 new로 생성하듯이 생성한다.</description>
    </item>
    
    <item>
      <title>메이븐 빌드 및 배포란?</title>
      <link>/spring/user_register/5/</link>
      <pubDate>Fri, 23 Aug 2019 04:32:00 +0900</pubDate>
      
      <guid>/spring/user_register/5/</guid>
      <description>메이븐은 프로젝트 객체 모델(Project Object Model)이라는 개념을 바탕으로 프로젝트 의존성 관리, 라이브러리 관리, 프로젝트 생명 주기 관리 기능 등을 제공하는 프로젝트 관리 도구이다. 또한 플러그인을 기반으로 소스 코드로부터 배포 가능한 산출물을 만들어 내는 빌드 기능 뿐만 아니라 레포팅 및 documentation 작성 기능 등을 제공한다.
메이븐 자세히 알아보러 가기
pom.xml 태그들 자세히 알아보기
pom.xml 태그 조금 더 간결하게, 정리 더 잘 된 것
maven (메이븐 구조, 차이점, 플러그인, 라이프사이클, 의존성, pom.xml)</description>
    </item>
    
  </channel>
</rss>