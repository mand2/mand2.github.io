<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on 고라니의 개발일기🦌</title>
    <link>https://mand2.github.io/tags/til/</link>
    <description>Recent content in TIL on 고라니의 개발일기🦌</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 03 Sep 2020 22:39:54 +0900</lastBuildDate>
    
	<atom:link href="https://mand2.github.io/tags/til/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>getter setter 설정</title>
      <link>https://mand2.github.io/python/1/</link>
      <pubDate>Tue, 04 Feb 2020 17:57:03 +0900</pubDate>
      
      <guid>https://mand2.github.io/python/1/</guid>
      <description>Python : getter setter 설정 클래스 내부에서 getter setter 설정 쉽게하기 메서드 낭비하지 않고 쉽게 쓸 수 있다! 불러오는 방법이나 셋하는 방법도 java와 조금 다름. 주의할 것..
# test.py class Test: def __init__(self, limit=None, persistent=None): if limit is None: self.__limit = False else : self.__limit = limit if persistent is None: self.__persistent = False else : self.__persistent = persistent @property def limit(self): return self.__limit @property def persistent(self): return self.__persistent @limit.setter def limit(self, limit): self.</description>
    </item>
    
    <item>
      <title>데이터 테이블로 정렬하기</title>
      <link>https://mand2.github.io/react/1/</link>
      <pubDate>Fri, 29 Nov 2019 15:48:28 +0900</pubDate>
      
      <guid>https://mand2.github.io/react/1/</guid>
      <description>react table 사용하기 목적 원하는 list를 게시판 형식으로 가져온 후, 모든 컬럼을 sorting 하기 위함. 찾아보니 react-bootstrap-table-next 라는 걸 찾음.
설치과정  react-create-app 사용(git push 후 babel 설정 modify + 그 외 기능들 추가) yarn add react-bootstrap-table-next 명령어로 react-bootstrap-table 설치   public/index.html 파일에 bootstrap CSS 추가해야 함! 이쁘게 보고싶다면 설치!   component에서 css 추가  import &amp;#39;react-bootstrap-table-next/dist/react-bootstrap-table2.min.css&amp;#39;; 
결론은 회사에선 쓸 수 없음 ㅠ_ㅠ 기존 css 랑 충돌될 것 같음 ,,</description>
    </item>
    
    <item>
      <title>package-lock.json 이란?</title>
      <link>https://mand2.github.io/node.js/1/</link>
      <pubDate>Wed, 11 Sep 2019 21:37:04 +0900</pubDate>
      
      <guid>https://mand2.github.io/node.js/1/</guid>
      <description>package-lock.json 파일이란? 프로젝트에 설치된 노드 모듈들의 의존성 트리를 기록하고 있음.

package-lock.json이 유용한 이유? git 저장소에 node.js 프로젝트를 커밋할 때 보통 node_modules 폴더는 부피가 커서 commit에 포함시키지 않습니다.이 때 package-lock.json 파일은 꼭 함께 커밋을 해주어야 합니다. 다른 팀원이 이 프로젝트를 처음 pull 받아서 npm install 을 했을 때 개발 당시의 동일한 버전의 모듈들이 설치됨을 보장하기 위함입니다. express 모듈을 프로젝트에 설치하게 되면 package.json 파일에 &amp;quot;express&amp;quot;: &amp;quot;~4.16.1&amp;quot; 처럼 Tilde Ranges 표기법으로 버전이 명시됩니다.</description>
    </item>
    
    <item>
      <title>Methods @Get, @Post, Delete, @Put</title>
      <link>https://mand2.github.io/spring/rest-api/methods/</link>
      <pubDate>Mon, 19 Aug 2019 14:30:56 +0900</pubDate>
      
      <guid>https://mand2.github.io/spring/rest-api/methods/</guid>
      <description>목적 @RestController 어노테이션을 이용한 RESTFUL로 변경하기
basics   Spring 4.0 버전 이후부터 @RestController 적용 가능
  @GetMapping
get으로 들어오는 URL 형식에 응답
  @PostMapping
post로 들어오는 URL 형식에 응답
  @DeleteMapping
delete로 들어오는 URL 형식에 응답
  @PutMapping
put으로 들어오는 URL 형식에 응답
  예제 @CrossOrigin @GetMapping public ResponseEntity&amp;lt;List&amp;lt;Member&amp;gt;&amp;gt; getAllList(){ List&amp;lt;Member&amp;gt; list = listService.getAllList(); ResponseEntity&amp;lt;List&amp;lt;Member&amp;gt;&amp;gt; entity = new ResponseEntity&amp;lt;List&amp;lt;Member&amp;gt;&amp;gt;(list, HttpStatus.OK ); return entity; }</description>
    </item>
    
    <item>
      <title>윈도우에서 Ubuntu로 pycharm 설치할 수 있을까</title>
      <link>https://mand2.github.io/python/2/</link>
      <pubDate>Thu, 06 Feb 2020 23:21:03 +0900</pubDate>
      
      <guid>https://mand2.github.io/python/2/</guid>
      <description>PyCharm 설치 ? 어쩌다보니(?)는 아니고, 자발적으로 파이썬 관련 업무를 맡게 되었다. 나아아-름 서버개발자라 윈도우 컴퓨터를 쓴다고 할지라도 리눅스 환경 + 가상환경으로 파이썬 개발을 하고자 했다. 오늘은 그 대서사시의 첫시작(&amp;hellip;)을 써보려고 한다.

1. Ubuntu 18.04 1-1 설치방법(INSTALL)   windows - app 에서 설치
  프로그램 설정 : 리눅스 허용 체크
  Ubuntu 에서 user &amp;amp;&amp;amp; pw 설정
  Ubuntu distro 세팅
sudo apt update &amp;amp;&amp;amp; sudo apt upgrade</description>
    </item>
    
    <item>
      <title>테이블을 엑셀로 다운로드</title>
      <link>https://mand2.github.io/react/2/</link>
      <pubDate>Fri, 13 Dec 2019 18:31:31 +0900</pubDate>
      
      <guid>https://mand2.github.io/react/2/</guid>
      <description>excel download 만들기 목적 전체 리스트를 테이블로 출력한 후, 화면에 보여지는 부분을 엑셀 형식으로 다운로드 가능하게 만들어 보자. 다운로드 창이 나오고, 다운로드 시 해당 파일명을 자동으로 설정까지 해주기!
Spec  react.js ^16.8.6 mobx ^5.13.0  사실 구글에 검색하면 잘 나온다..(검색어 : Export html table data to Excel using JavaScript) 나는 그 글을 긁어왔을 뿐ㅎㅎ,, 다른 방법으로도 가능한데, 지금 내가 구현한 부분은 서버에 과부하를 생성하지 않도록 현재 화면에서 보여지는 것만 엑셀로 출력하도록 만든것임.</description>
    </item>
    
    <item>
      <title>formidable 설치 오류 해결하기</title>
      <link>https://mand2.github.io/node.js/2/</link>
      <pubDate>Thu, 26 Sep 2019 21:55:23 +0900</pubDate>
      
      <guid>https://mand2.github.io/node.js/2/</guid>
      <description>위와 같이 npm에 formidable을 설정하려고 하니 package.json이 없다고 뜸
package.json은 해당 프로젝트 의존모듈 관리를 도와주기 때문에 설치해야 한다.
정리:: npm 이란? node package manager : 모듈관리매니저

1. 해당 프로젝트 디렉토리로 들어감 cd D:\node\nodeJS_test
2. npm init 을 써준다 npm init -y 위의 이미지를 보면, package.json내부에 해당 프로젝트의 이름, 버전, 사용되는 모듈 등의 스펙을 볼 수 있다. 이 package.json을 통해 모듈 의존성 모듈 관리도 진행할 수 있다.</description>
    </item>
    
    <item>
      <title>@PutMapping 사용 시 415 오류 해결방법</title>
      <link>https://mand2.github.io/spring/rest-api/415-error-of-put/</link>
      <pubDate>Mon, 19 Aug 2019 17:37:13 +0900</pubDate>
      
      <guid>https://mand2.github.io/spring/rest-api/415-error-of-put/</guid>
      <description>원인? PUT일 때 ResponseEntity&amp;lt; String &amp;gt;으로 써야하지?  ResponseEntity&amp;lt;Integer&amp;gt; 일 때엔 아예 인식을 못함
415 error 발생!
    Exception 설명 응답코드     HttpMediaTypeNotSupportedException 요청의 Content Type을 핸들러가 지원하지 않는 경우 발생 415 - Unsupported Media Type    출처 (Spring Boot)오류 처리
415 코드 해결방법 contentType을 JSON이라 명시해준다.
contentType: &amp;#39;application/json; charset=utf-8&amp;#39; 
1. JSON &amp;lt;&amp;gt; JSON 으로 변환해줘야 한다 request를 JSON으로 보냈다면, response도 JSON으로 보내줘야 한다.</description>
    </item>
    
    <item>
      <title>javascript의 innerHTML과 같은 기능은?</title>
      <link>https://mand2.github.io/react/3/</link>
      <pubDate>Fri, 13 Dec 2019 20:48:37 +0900</pubDate>
      
      <guid>https://mand2.github.io/react/3/</guid>
      <description>리액트의 innerHTML 은 ? 목적 String으로 tag를 다 만들어서 컴포넌트에 넣고 싶은데, 왜 태그 인식이 안될까요,,, 에서 시작되었다. 호출할 컴포넌트에 String으로 넣어주면 알아서 될 줄 알았건만.. 변환이 안되어서 innterHTML도 써보고 여러가지 해봤는데 리액트는 기본적으로 innterHTML 자체를 인식하지 못한다고 한다.
그러면 뭘 인식하져? 라고하면 아래의 글을 읽으면 됩니다 :-)
HOW TO dangerouslySetInnerHTML 이라는 걸 태그 내부에 설정해주면 된다.

01 Store.js /** ------------------------------------------------ * String 으로 받은 메세지 내부 html 형식으로 변환 * * ------------------------------------------------*/ setDetails(){ return {__html: `${this.</description>
    </item>
    
    <item>
      <title>aws EC2로 node.js 배포하기</title>
      <link>https://mand2.github.io/node.js/3/</link>
      <pubDate>Tue, 15 Oct 2019 09:43:26 +0900</pubDate>
      
      <guid>https://mand2.github.io/node.js/3/</guid>
      <description>1. node.js로 서버 배포하기 마지막 프로젝트를 하며 간단한 채팅을 node.js로 만들었다. 간단하게 구현하는 건 어찌어찌 했는데,, 문제는 배포하는 것. 주변에 구현하면서 고생한 친구가 있어서 편하게 했다.

[STEP 1] 인스턴스 생성부터 - putty 설정까지  aws ec2 인스턴스 생성
프리티어만으로 체크한 후
Amazon Linux AMI 2018.03.0 (HVM), SSD Volume Type 를 선택했다
자동으로 선택되어 있는 t2.micro 로 했으며,
관리하기 쉽게 보안그룹 이름을 내가 원하는 이름으로 변경함. pem 키 발급 (인증키임.. 재발급 불가라 잃어버리면 새로 인스턴스 생성해야함 ㅠ)</description>
    </item>
    
    <item>
      <title>statustext parsererror 해결방법</title>
      <link>https://mand2.github.io/spring/rest-api/statustext_parser_error/</link>
      <pubDate>Wed, 11 Sep 2019 12:31:53 +0900</pubDate>
      
      <guid>https://mand2.github.io/spring/rest-api/statustext_parser_error/</guid>
      <description>200 도 뜨는데 왜 에러로 걸리지? Spring으로 회원가입 페이지를 만들었다. 회원가입하기 버튼을 눌렀을 때 콘솔에서 에러로 들어왔다고 나왔다. DB에 제대로 들어가는 건 함정&amp;hellip;
서버쪽에서 제대로 넘어갔고, 200으로도 뜨는데 왜 ajax로 넘어올 때 success가 아닌 error로 넘어갈까 찾아보았다.
$.ajax({ url: &amp;#39;&amp;#39;, type: &amp;#39;post&amp;#39;, data: JSON.stringify(all), contentType : &amp;#39;application/json;charset=utf-8&amp;#39;, dataTyep: &amp;#39;json&amp;#39;, success: function(data){ if(data == &amp;#39;success&amp;#39;){ console.log(&amp;#39;success성공&amp;#39;); } else if(data == &amp;#39;fail&amp;#39;){ console.log(&amp;#39;success:실패&amp;#39;) } else { console.log(&amp;#39;success:요상한값들어간듯,&amp;#39; + data) } }, error: function(data){ console.</description>
    </item>
    
    <item>
      <title>REST API Client에서 호출가능한 Library</title>
      <link>https://mand2.github.io/spring/rest-api/libraries-for-client/</link>
      <pubDate>Wed, 04 Mar 2020 23:13:53 +0900</pubDate>
      
      <guid>https://mand2.github.io/spring/rest-api/libraries-for-client/</guid>
      <description>우리 팀은 MSA 방식으로 웹 어플리케이션을 만들기 때문에 api 통신이 중요하다. api 통신을 하기 위해서 client 단에서 호출 가능한 library가 무엇이 있는지 찾아보았다. 크게 두 라이브러리를 사용하는데, HttpURLConnection 과 RestTemplate 이다.

1 HttpURLConnection void sendRequest(String request) { // i.e.: request = &amp;#34;http://example.com/index.php?param1=a&amp;amp;param2=b&amp;amp;param3=c&amp;#34;;  URL url = new URL(request); HttpURLConnection connection = (HttpURLConnection) url.openConnection(); connection.setDoOutput(true); connection.setInstanceFollowRedirects(false); connection.setRequestMethod(&amp;#34;GET&amp;#34;); connection.setRequestProperty(&amp;#34;Content-Type&amp;#34;, &amp;#34;text/plain&amp;#34;); connection.setRequestProperty(&amp;#34;charset&amp;#34;, &amp;#34;utf-8&amp;#34;); connection.connect(); } 
2 RestTemplate DOCS
요즘 들어 선호하는 형태는 postForObject .</description>
    </item>
    
    <item>
      <title>자바 형변환 안전하게 하기</title>
      <link>https://mand2.github.io/til/java-str-to-double/</link>
      <pubDate>Thu, 03 Sep 2020 22:39:54 +0900</pubDate>
      
      <guid>https://mand2.github.io/til/java-str-to-double/</guid>
      <description>형변환 할 때마다 참 고민이다.
long -&amp;gt; int 형변환은 쉽게 java.lang.Math.toIntExtract(long value)을 이용하면 된다지만, 그 외의 형변환을 할 때 &amp;lt;지금 내가 사용하는 게 정말 안전한 방법&amp;gt;인지 궁금해졌다. 어떻게 하면 더 안전하게 형변환 할 수 있을지 궁금해서 찾아본 안전하게 형변환하는 방법.
다른 예도 많지만 String에서 double로 형변환 하는 방법을 들어보겠다. new Double(&amp;ldquo;1.23&amp;rdquo;) 와 같이 Double을 새로 만들어서 사용하는 건 Java 9부터 deprecated 되었다. 지양할 것.
형변환을 도와주는 메서드 자바에서 형변환을 도와주는 메서드는 크게 세 가지로 볼 수 있다.</description>
    </item>
    
    <item>
      <title>자바스크립트로 AWS autoscaling group 정보 가져오기</title>
      <link>https://mand2.github.io/til/get-autoscaling-by-js/</link>
      <pubDate>Wed, 02 Sep 2020 22:35:44 +0900</pubDate>
      
      <guid>https://mand2.github.io/til/get-autoscaling-by-js/</guid>
      <description>각 리전의 인스턴스를 컨트롤하는 람다를 유지보수하는 일을 맡았다. 일단 리전 하나에서 관리하는 것도 충분히 힘들지만, 여러 리전에서 관리를 하다니&amp;hellip; 같이 일하시는 분들이 대단해 보인다. 다들 기억력이 정말 좋으신듯 ㅠ_ㅠ 리전 하나당 관리하는 인스턴스 종류도 여러가지인데 꼼꼼하셔서 큰 사고없이 잘 유지중인 것 같다.
아무튼 각설하고, 오늘의 주제는 AWS autoScalingGroup 정보 가져오기 by. javascript.
AWS에서는 SDK라고 해서 aws 관련한 모든 것에 접근할 수 있는 라이브러리를 제공한다. 평소에는 java-sdk로 aws에 접근하지만, 이번에는 람다용으로 개발할 거라서 javascript-sdk 용으로 설명한다.</description>
    </item>
    
    <item>
      <title>블로그 커밋 메세지 만들고 자동 배포 하기</title>
      <link>https://mand2.github.io/til/blog-auto-commit/</link>
      <pubDate>Mon, 31 Aug 2020 19:36:11 +0900</pubDate>
      
      <guid>https://mand2.github.io/til/blog-auto-commit/</guid>
      <description>정말 짧은 기간이긴 하지만, Hugo 테마로 블로그를 구축하다 보니 git commit 하기가 귀찮아졌다.
회사에서는 웬만하면 git 커맨드로 직접 push 하는 스타일이긴 한데, 이렇게 자주 수정하고 push를 여러 단계에 걸쳐서 하는 건 아니라서💦 더 귀찮아진 느낌이다.
결국 배포 자동화 하는 쉘스크립트를 작성하였다.
기본적인 뼈대는 한정수님 블로그의 README.md에서 참고하였다. 그냥 커밋 메세지를 똑같이 auto commit!으로 하기엔 넘 멋없어 보여서 커밋 메세지를 따로 입력받아 처리하였다. 쉘스크립트를 호출하면서 커밋메세지를 받아올 수도 있지만, 그렇게 하면 순간적으로 오타가 날 수도 있고 다른 내용을 작성하고 싶기도 해서 관리하기 쉽게 커밋 메세지용 파일을 따로 만들어 두었다.</description>
    </item>
    
    <item>
      <title>Maven pom.xml 빌드 플러그인 세팅하기</title>
      <link>https://mand2.github.io/til/build-plugs-of-maven/</link>
      <pubDate>Tue, 21 Jan 2020 07:24:52 +0900</pubDate>
      
      <guid>https://mand2.github.io/til/build-plugs-of-maven/</guid>
      <description>작성한 코드를 라이브러리 형식으로 만들기 위해 .jar 파일로 만들었다. 내가 세팅한 버전 등에 맞게 내보내기 위해 + 설정한 dependency 까지 보내주기 위하여 설정하였다.
스펙
 intellij JDK 1.8 maven 4.0.0  그전에 앞서, apache maven project 사이트에서 말하는 최소 사양은 다음과 같다.
 Maven 3.0 이상 JDK 1.7 이상  Q. pom.xml에 사용한 dependency를 어떻게 내보내야 하는가? 두 가지 버전이 있다.
  maven-assembly-plugin 사용:
내부에 전 dependency를 저장하여 보내주기 때문에 용량이 크다.</description>
    </item>
    
    <item>
      <title>DB index의 정의</title>
      <link>https://mand2.github.io/til/definition-db-index/</link>
      <pubDate>Thu, 19 Dec 2019 18:20:06 +0900</pubDate>
      
      <guid>https://mand2.github.io/til/definition-db-index/</guid>
      <description>What is index? USAGE 1 : Support for fast Lookup
An index is any data structure that improves the performance of lookup. There are many different data structures used for this purpose. There are complex design trade-offs involving lookup performance, index size, and index-update performance. Many index designs exhibit logarithmic (O(log(N)) lookup performance and in some applications it is possible to achieve flat (O(1)) performance.
USAGE 2 : Policing the database constraints (I assumed it as a DB table guideline)</description>
    </item>
    
    <item>
      <title>컬렉션 프레임워크의 정의와 stream 사용법 간단 정리</title>
      <link>https://mand2.github.io/til/collection-framework/</link>
      <pubDate>Wed, 30 Oct 2019 18:58:29 +0900</pubDate>
      
      <guid>https://mand2.github.io/til/collection-framework/</guid>
      <description>최근, 알고리즘 문제를 풀 때 (링크) 다른 사람의 문제풀이에서 stream()을 사용한 풀이가 있었다. 그동안 stackOverFlow에서나, 다른 레퍼런스 문서 등에서 가끔 보던 형식이었다. 그 땐 이 형식이 람다식으로 만들어진 줄도 몰랐다. 내 기억상 음,, 이건 다른 언어에서 쓰는건가? 하고 넘겼던 듯. 이번 문제풀이를 통해 컬렉션과 람다식에 대해 꼼꼼히 배울 수 있는 계기가 되었다고 생각하고, 간단히 정리를 해 보려고 한다. 아래는 내가 보았던 식이다.
return list.stream().mapToInt(i-&amp;gt;i.intValue()).toArray(); 이 뜻은
 list를 스트림으로 만들고, int 형식으로 변환 후 다시 배열로 바로 반환  한다는 뜻이다.</description>
    </item>
    
  </channel>
</rss>