<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on GoRaNee&#39;s dev-log</title>
    <link>/tags/til/</link>
    <description>Recent content in TIL on GoRaNee&#39;s dev-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 06 Feb 2020 23:21:03 +0900</lastBuildDate>
    
	<atom:link href="/tags/til/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>getter setter 설정</title>
      <link>/python/1/</link>
      <pubDate>Tue, 04 Feb 2020 17:57:03 +0900</pubDate>
      
      <guid>/python/1/</guid>
      <description>Python : getter setter 설정 클래스 내부에서 getter setter 설정 쉽게하기 메서드 낭비하지 않고 쉽게 쓸 수 있다! 불러오는 방법이나 셋하는 방법도 java와 조금 다름. 주의할 것..
# test.py class Test: def __init__(self, limit=None, persistent=None): if limit is None: self.__limit = False else : self.__limit = limit if persistent is None: self.__persistent = False else : self.__persistent = persistent @property def limit(self): return self.__limit @property def persistent(self): return self.__persistent @limit.setter def limit(self, limit): self.</description>
    </item>
    
    <item>
      <title>데이터 테이블로 정렬하기</title>
      <link>/react/1/</link>
      <pubDate>Fri, 29 Nov 2019 15:48:28 +0900</pubDate>
      
      <guid>/react/1/</guid>
      <description>react table 사용하기 목적 원하는 list를 게시판 형식으로 가져온 후, 모든 컬럼을 sorting 하기 위함. 찾아보니 react-bootstrap-table-next 라는 걸 찾음.
설치과정  react-create-app 사용(git push 후 babel 설정 modify + 그 외 기능들 추가) yarn add react-bootstrap-table-next 명령어로 react-bootstrap-table 설치   public/index.html 파일에 bootstrap CSS 추가해야 함! 이쁘게 보고싶다면 설치!   component에서 css 추가  import &amp;#39;react-bootstrap-table-next/dist/react-bootstrap-table2.min.css&amp;#39;; 결론은 회사에선 쓸 수 없음 ㅠ_ㅠ 기존 css 랑 충돌될 것 같음 ,,</description>
    </item>
    
    <item>
      <title>package-lock.json 이란?</title>
      <link>/node.js/1/</link>
      <pubDate>Wed, 11 Sep 2019 21:37:04 +0900</pubDate>
      
      <guid>/node.js/1/</guid>
      <description>package-lock.json 파일이란? 프로젝트에 설치된 노드 모듈들의 의존성 트리를 기록하고 있음.
package-lock.json이 유용한 이유? git 저장소에 node.js 프로젝트를 커밋할 때 보통 node_modules 폴더는 부피가 커서 commit에 포함시키지 않습니다.이 때 package-lock.json 파일은 꼭 함께 커밋을 해주어야 합니다. 다른 팀원이 이 프로젝트를 처음 pull 받아서 npm install 을 했을 때 개발 당시의 동일한 버전의 모듈들이 설치됨을 보장하기 위함입니다. express 모듈을 프로젝트에 설치하게 되면 package.json 파일에 &amp;quot;express&amp;quot;: &amp;quot;~4.16.1&amp;quot; 처럼 Tilde Ranges 표기법으로 버전이 명시됩니다. 4.</description>
    </item>
    
    <item>
      <title>윈도우에서 Ubuntu로 pycharm 설치할 수 있을까</title>
      <link>/python/2/</link>
      <pubDate>Thu, 06 Feb 2020 23:21:03 +0900</pubDate>
      
      <guid>/python/2/</guid>
      <description>PyCharm 설치 ? 어쩌다보니(?)는 아니고, 자발적으로 파이썬 관련 업무를 맡게 되었다. 나아아-름 서버개발자라 윈도우 컴퓨터를 쓴다고 할지라도 리눅스 환경 + 가상환경으로 파이썬 개발을 하고자 했다. 오늘은 그 대서사시의 첫시작(&amp;hellip;)을 써보려고 한다.
1. Ubuntu 18.04 1-1 설치방법(INSTALL)   windows - app 에서 설치
  프로그램 설정 : 리눅스 허용 체크
  Ubuntu 에서 user &amp;amp;&amp;amp; pw 설정
  Ubuntu distro 세팅
sudo apt update &amp;amp;&amp;amp; sudo apt upgrade   1-2 결과 WSL로 pycharm 세팅하려 했지만, snap 을 지원하지 않는다고 하여 실패.</description>
    </item>
    
    <item>
      <title>테이블을 엑셀로 다운로드</title>
      <link>/react/2/</link>
      <pubDate>Fri, 13 Dec 2019 18:31:31 +0900</pubDate>
      
      <guid>/react/2/</guid>
      <description>excel download 만들기 목적 전체 리스트를 테이블로 출력한 후, 화면에 보여지는 부분을 엑셀 형식으로 다운로드 가능하게 만들어 보자. 다운로드 창이 나오고, 다운로드 시 해당 파일명을 자동으로 설정까지 해주기!
Spec  react.js ^16.8.6 mobx ^5.13.0  사실 구글에 검색하면 잘 나온다..(검색어 : Export html table data to Excel using JavaScript) 나는 그 글을 긁어왔을 뿐ㅎㅎ,, 다른 방법으로도 가능한데, 지금 내가 구현한 부분은 서버에 과부하를 생성하지 않도록 현재 화면에서 보여지는 것만 엑셀로 출력하도록 만든것임.</description>
    </item>
    
    <item>
      <title>formidable 설치 오류 해결하기</title>
      <link>/node.js/2/</link>
      <pubDate>Thu, 26 Sep 2019 21:55:23 +0900</pubDate>
      
      <guid>/node.js/2/</guid>
      <description>위와 같이 npm에 formidable을 설정하려고 하니 package.json이 없다고 뜸
package.json은 해당 프로젝트 의존모듈 관리를 도와주기 때문에 설치해야 한다.정리:: npm 이란? node package manager : 모듈관리매니저
1. 해당 프로젝트 디렉토리로 들어감 cd D:\node\nodeJS_test2. npm init 을 써준다 npm init -y위의 이미지를 보면, package.json내부에 해당 프로젝트의 이름, 버전, 사용되는 모듈 등의 스펙을 볼 수 있다. 이 package.json을 통해 모듈 의존성 모듈 관리도 진행할 수 있다. 만약 어떤 오픈 소스를 다운 받을 때 이 package.</description>
    </item>
    
    <item>
      <title>javascript의 innerHTML과 같은 기능은?</title>
      <link>/react/3/</link>
      <pubDate>Fri, 13 Dec 2019 20:48:37 +0900</pubDate>
      
      <guid>/react/3/</guid>
      <description>리액트의 innerHTML 은 ? 목적 String으로 tag를 다 만들어서 컴포넌트에 넣고 싶은데, 왜 태그 인식이 안될까요,,, 에서 시작되었다. 호출할 컴포넌트에 String으로 넣어주면 알아서 될 줄 알았건만.. 변환이 안되어서 innterHTML도 써보고 여러가지 해봤는데 리액트는 기본적으로 innterHTML 자체를 인식하지 못한다고 한다.
그러면 뭘 인식하져? 라고하면 아래의 글을 읽으면 됩니다 :-)
HOW TO dangerouslySetInnerHTML 이라는 걸 태그 내부에 설정해주면 된다.
01 Store.js /** ------------------------------------------------ * String 으로 받은 메세지 내부 html 형식으로 변환 * * ------------------------------------------------*/ setDetails(){ return {__html: `${this.</description>
    </item>
    
    <item>
      <title>aws EC2로 node.js 배포하기</title>
      <link>/node.js/3/</link>
      <pubDate>Tue, 15 Oct 2019 09:43:26 +0900</pubDate>
      
      <guid>/node.js/3/</guid>
      <description>1. node.js로 서버 배포하기 마지막 프로젝트를 하며 간단한 채팅을 node.js로 만들었다. 간단하게 구현하는 건 어찌어찌 했는데,, 문제는 배포하는 것. 주변에 구현하면서 고생한 친구가 있어서 편하게 했다.
[STEP 1] 인스턴스 생성부터 - putty 설정까지  aws ec2 인스턴스 생성
프리티어만으로 체크한 후
Amazon Linux AMI 2018.03.0 (HVM), SSD Volume Type 를 선택했다
자동으로 선택되어 있는 t2.micro 로 했으며,
관리하기 쉽게 보안그룹 이름을 내가 원하는 이름으로 변경함. pem 키 발급 (인증키임.. 재발급 불가라 잃어버리면 새로 인스턴스 생성해야함 ㅠ)</description>
    </item>
    
  </channel>
</rss>